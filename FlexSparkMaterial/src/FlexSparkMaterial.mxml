<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009"
			   xmlns:s="library://ns.adobe.com/flex/spark"
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   xmlns:components="spark.material.components.*"
			   xmlns:skins="spark.material.skins.*"
			   minWidth="955" minHeight="600" viewSourceURL="srcview/index.html">
	
		<fx:Style>
		@namespace components "spark.material.components.*";
		@namespace s "library://ns.adobe.com/flex/spark";
		@font-face {
			src: url("spark/material/assets/fonts/Roboto.swf");
			cff:false;
			fontFamily: "Roboto";
			fontStyle: normal;
		}
		
		@font-face {
			src: url("spark/material/assets/fonts/Roboto.swf");
			cff:false;
			fontFamily: "Roboto";
			fontStyle: italic;
		}
		
		@font-face {
			src: url("spark/material/assets/fonts/Roboto.swf");
			fontFamily: "Roboto";
			fontWeight: bold;
			fontSharpness: 400;
			cff:true;
		}
		
		global
		{
			fontFamily: "Roboto";
			fontStyle:normal;
			color: #000000;
			fontSize: 14;
			modal-transparency-duration: 0;
		}
		
		components|Button.primary
		{
			backgroundColor: #106cc8;
			inkColor: #c6e0fb;
			color: #ededed;
		}
		
		components|Button.primary-flat
		{
			buttonStyle: flat;
			inkColor: #82bfff;
			color: #025aa3;
		}
		
		components|Button.warn
		{
			backgroundColor: #f44336;
			inkColor: #f68f89;
			color: #ffffff;
		}
		
		components|Button.warn-flat
		{
			buttonStyle: flat;
			inkColor: #f68f89;
			color: #f44336;
		}
			
		components|DropDownList
		{
			selectionColor: #ffffff;
			rollOverColor: #eeeeee;
			selectedItemTextColor: #106cc8;
		}
				
		s|FormItem {
			skinClass: ClassReference("spark.material.skins.FormItemSkin");
			showErrorTip: false;
		}
	</fx:Style>
	<fx:Script>
		<![CDATA[
			import flash.net.navigateToURL;
			
			import spark.material.skins.PanelSkin;
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<mx:Validator id="validator" source="{firstName}" property="text"/>
		<s:ArrayList id="cities">
			<s:source>
				<fx:Array>
					<fx:Object label="Aveiro"/>
					<fx:Object label="Beja"/>
					<fx:Object label="Braga"/>
					<fx:Object label="Bragança"/>
					<fx:Object label="Castelo Branco"/>
					<fx:Object label="Coimbra"/>
					<fx:Object label="Évora"/>
					<fx:Object label="Faro"/>
					<fx:Object label="Guarda"/>
					<fx:Object label="Leiria"/>
					<fx:Object label="Lisboa"/>
					<fx:Object label="Portalegre"/>
					<fx:Object label="Porto"/>
					<fx:Object label="Santarém"/>
					<fx:Object label="Setubal"/>
					<fx:Object label="Viana do Castelo"/>
					<fx:Object label="Vila Real"/>
					<fx:Object label="Viseu"/>
				</fx:Array>
			</s:source>
		</s:ArrayList>
	</fx:Declarations>
	
	<s:Scroller left="0" top="0" bottom="0" right="0">
		<s:VGroup horizontalAlign="center" verticalAlign="middle" paddingTop="20" paddingBottom="20">			
			<s:Panel skinClass="spark.material.skins.PanelSkin" title="Spark Material" width="800">				
				<s:RichText left="25" top="25" right="25" color="0x666666" lineHeight="120%" fontSize="16" fontStyle="italic">
					<s:textFlow>
						<s:TextFlow>
							<s:p><s:span>"A material metaphor is the unifying theory of a rationalized space and a system of motion. The material is grounded in tactile reality, inspired by the study of paper and ink, yet technologically advanced and open to imagination and magic.</s:span></s:p><s:p/><s:p><s:span>Surfaces and edges of the material provide visual cues that are grounded in reality. The use of familiar tactile attributes helps users quickly understand affordances. Yet the flexibility of the material creates new affordances that supercede those in the physical world, without breaking the rules of physics. </s:span></s:p><s:p/><s:p><s:span>The fundamentals of light, surface, and movement are key to conveying how objects move, interact, and exist in space and in relation to each other. Realistic lighting shows seams, divides space, and indicates moving parts."</s:span></s:p>
						</s:TextFlow>
					</s:textFlow>
				</s:RichText>				
				<s:Group left="20" right="20" bottom="65" top="260">
					<s:Rect left="0" right="0" bottom="0" top="0">
						<s:fill>
							<s:SolidColor color="#f7f7f7"/>
						</s:fill>
						<s:filters>
							<s:DropShadowFilter alpha="0.3" angle="90" blurX="4" blurY="4" distance="1" quality="2" strength="1"/>
						</s:filters>
					</s:Rect>					
					<s:Form top="0" left="0" bottom="0" right="0">
						<s:FormItem label="TextInput" required="true">						
							<components:TextInput id="firstName" prompt="First Name" width="50%" change="validator.validate()" focusOut="validator.validate()"/>
						</s:FormItem>
						<s:FormItem label="DropdownList">
							<s:layout>
								<s:HorizontalLayout gap="10" verticalAlign="bottom"/>
							</s:layout>
							<components:DropDownList id="dropdownlist" dataProvider="{cities}" prompt="State" />
							<s:Label text="clear" color="#f44336" fontSize="13" buttonMode="true" useHandCursor="true" click="dropdownlist.selectedItem=null" visible="{dropdownlist.selectedIndex!=-1}"/>
						</s:FormItem>
						<s:FormItem label="CheckBox">
							<s:layout>
								<s:HorizontalLayout gap="20"/>
							</s:layout>
							<components:CheckBox label="Active"/>
							<components:CheckBox label="Disabled" enabled="false"/>
							<components:CheckBox label="Disabled and Selected" selected="true" enabled="false"/>
						</s:FormItem>
						<s:FormItem label="Switch">
							<s:layout>
								<s:HorizontalLayout gap="20"/>
							</s:layout>
							<components:Switch id="switcher" selected="true"/>
							<components:Switch enabled="false"/>
							<components:Switch enabled="false" selected="true"/>
						</s:FormItem>
						<s:FormItem label="RadioButton ">
							<s:layout>
								<s:HorizontalLayout gap="20"/>
							</s:layout>
							<components:RadioButton label="Option One" groupName="options" selected="true"/>
							<components:RadioButton label="Option Two" groupName="options"/>
							<components:RadioButton label="Disabled" groupName="options" enabled="false"/>
							<components:RadioButton label="Disabled and Selected" enabled="false" selected="true"/>
						</s:FormItem>
						<s:FormItem label="Slider">
							<s:layout>
								<s:HorizontalLayout gap="20"/>
							</s:layout>
							<components:HSlider id="slider" minimum="0" maximum="10" width="200" stepSize="0"/>
							<components:HSlider enabled="false" value="{slider.value}" minimum="0" maximum="10" width="200" stepSize="0"/>
						</s:FormItem>						
						<s:FormItem label="Button">
							<s:layout>
								<s:HorizontalLayout gap="20"/>
							</s:layout>
							<components:Button label="button"/>
							<components:Button label="primary" styleName="primary"/>
							<components:Button label="disabled" enabled="false"/>
							<components:Button label="warning" styleName="warn"/>
						</s:FormItem>
						<s:FormItem label="Flat Button">
							<s:layout>
								<s:HorizontalLayout gap="20"/>
							</s:layout>
							<components:Button label="button" buttonStyle="flat"/>
							<components:Button label="primary" styleName="primary-flat"/>
							<components:Button label="disabled" buttonStyle="flat" enabled="false"/>
							<components:Button label="warning" styleName="warn-flat"/>
						</s:FormItem>				
					</s:Form>
				</s:Group>				
				<components:Button label="Material Reference Guide" horizontalCenter="0" bottom="15" styleName="primary-flat" 
								   click="navigateToURL(new URLRequest('https://www.google.com/design/spec/material-design/introduction.html'),'_blank')"/>				
			</s:Panel>
		</s:VGroup>
	</s:Scroller>	
</s:Application>